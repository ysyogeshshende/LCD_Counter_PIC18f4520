

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jul 08 13:11:30 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     _LATB	set	3978
    18  0000                     _OSCCON	set	4051
    19  0000                     _TRISB	set	3987
    20  0000                     _TRISD	set	3989
    21  0000                     _LATD0	set	31840
    22  0000                     _LATD1	set	31841
    23                           
    24                           	psect	smallconst
    25  000800                     __psmallconst:
    26                           	opt stack 0
    27  000800  00                 	db	0
    28  000801                     STR_1:
    29  000801  45                 	db	69	;'E'
    30  000802  77                 	db	119	;'w'
    31  000803  69                 	db	105	;'i'
    32  000804  6E                 	db	110	;'n'
    33  000805  67                 	db	103	;'g'
    34  000806  73                 	db	115	;'s'
    35  000807  00                 	db	0
    36                           
    37                           ; #config settings
    38  000808  00                 	db	0	; dummy byte at the end
    39  0000                     
    40                           	psect	cinit
    41  000942                     __pcinit:
    42                           	opt stack 0
    43  000942                     start_initialization:
    44                           	opt stack 0
    45  000942                     __initialization:
    46                           	opt stack 0
    47  000942                     end_of_initialization:
    48                           	opt stack 0
    49  000942                     __end_of__initialization:
    50                           	opt stack 0
    51  000942  0E00               	movlw	low (__Lsmallconst shr (0+16))
    52  000944  6EF8               	movwf	tblptru,c
    53  000946  0E08               	movlw	high __Lsmallconst
    54  000948  6EF7               	movwf	tblptrh,c
    55  00094A  0100               	movlb	0
    56  00094C  EF6E  F004         	goto	_main	;jump to C main() function
    57                           tblptru	equ	0xFF8
    58                           tblptrh	equ	0xFF7
    59                           
    60                           	psect	cstackCOMRAM
    61  000001                     __pcstackCOMRAM:
    62                           	opt stack 0
    63  000001                     MSdelay@val:
    64                           	opt stack 0
    65                           
    66                           ; 2 bytes @ 0x0
    67  000001                     	ds	2
    68  000003                     MSdelay@i:
    69                           	opt stack 0
    70                           
    71                           ; 2 bytes @ 0x2
    72  000003                     	ds	2
    73  000005                     MSdelay@j:
    74                           	opt stack 0
    75                           
    76                           ; 2 bytes @ 0x4
    77  000005                     	ds	2
    78  000007                     LCD_Command@cmd:
    79                           	opt stack 0
    80  000007                     LCD_Char@dat:
    81                           	opt stack 0
    82                           
    83                           ; 1 bytes @ 0x6
    84  000007                     	ds	1
    85  000008                     LCD_String@msg:
    86                           	opt stack 0
    87                           
    88                           ; 2 bytes @ 0x7
    89  000008                     	ds	2
    90  00000A                     LCD_String_xy@pos:
    91                           	opt stack 0
    92                           
    93                           ; 1 bytes @ 0x9
    94  00000A                     	ds	1
    95  00000B                     LCD_String_xy@msg:
    96                           	opt stack 0
    97                           
    98                           ; 2 bytes @ 0xA
    99  00000B                     	ds	2
   100  00000D                     LCD_String_xy@row:
   101                           	opt stack 0
   102                           
   103                           ; 1 bytes @ 0xC
   104  00000D                     	ds	1
   105  00000E                     LCD_String_xy@location:
   106                           	opt stack 0
   107                           
   108                           ; 1 bytes @ 0xD
   109  00000E                     	ds	1
   110  00000F                     tblptru	equ	0xFF8
   111                           tblptrh	equ	0xFF7
   112                           
   113                           ; 0 bytes @ 0xE
   114 ;;
   115 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   116 ;;
   117 ;; *************** function _main *****************
   118 ;; Defined at:
   119 ;;		line 26 in file "LCD 16x2.c"
   120 ;; Parameters:    Size  Location     Type
   121 ;;		None
   122 ;; Auto vars:     Size  Location     Type
   123 ;;		None
   124 ;; Return value:  Size  Location     Type
   125 ;;		None               void
   126 ;; Registers used:
   127 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   128 ;; Tracked objects:
   129 ;;		On entry : 0/0
   130 ;;		On exit  : 0/0
   131 ;;		Unchanged: 0/0
   132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   133 ;;      Params:         0       0       0       0       0       0       0       0       0
   134 ;;      Locals:         0       0       0       0       0       0       0       0       0
   135 ;;      Temps:          0       0       0       0       0       0       0       0       0
   136 ;;      Totals:         0       0       0       0       0       0       0       0       0
   137 ;;Total ram usage:        0 bytes
   138 ;; Hardware stack levels required when called:    4
   139 ;; This function calls:
   140 ;;		_LCD_Char
   141 ;;		_LCD_Init
   142 ;;		_LCD_String_xy
   143 ;; This function is called by:
   144 ;;		Startup code after reset
   145 ;; This function uses a non-reentrant model
   146 ;;
   147                           
   148                           	psect	text0
   149  0008DC                     __ptext0:
   150                           	opt stack 0
   151  0008DC                     _main:
   152                           	opt stack 27
   153                           
   154                           ;LCD 16x2.c: 28: OSCCON=0x72;
   155                           
   156                           ;incstack = 0
   157  0008DC  0E72               	movlw	114
   158  0008DE  6ED3               	movwf	4051,c	;volatile
   159                           
   160                           ;LCD 16x2.c: 29: LCD_Init();
   161  0008E0  EC41  F004         	call	_LCD_Init	;wreg free
   162                           
   163                           ;LCD 16x2.c: 30: LCD_Char(0x45);
   164  0008E4  0E45               	movlw	69
   165  0008E6  EC94  F004         	call	_LCD_Char
   166                           
   167                           ;LCD 16x2.c: 31: LCD_String_xy(1,0,"Ewings");
   168  0008EA  0E00               	movlw	0
   169  0008EC  6E0A               	movwf	LCD_String_xy@pos,c
   170  0008EE  0E01               	movlw	low STR_1
   171  0008F0  6E0B               	movwf	LCD_String_xy@msg,c
   172  0008F2  0E08               	movlw	high STR_1
   173  0008F4  6E0C               	movwf	LCD_String_xy@msg+1,c
   174  0008F6  0E01               	movlw	1
   175  0008F8  EC24  F004         	call	_LCD_String_xy
   176  0008FC  D7FF               	goto	l26
   177  0008FE  EF00  F000         	goto	start
   178  000902                     __end_of_main:
   179                           	opt stack 0
   180                           tblptru	equ	0xFF8
   181                           tblptrh	equ	0xFF7
   182                           
   183 ;; *************** function _LCD_String_xy *****************
   184 ;; Defined at:
   185 ;;		line 84 in file "LCD 16x2.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;  row             1    wreg     unsigned char 
   188 ;;  pos             1    9[COMRAM] unsigned char 
   189 ;;  msg             2   10[COMRAM] PTR const unsigned char 
   190 ;;		 -> STR_1(7), 
   191 ;; Auto vars:     Size  Location     Type
   192 ;;  row             1   12[COMRAM] unsigned char 
   193 ;;  location        1   13[COMRAM] unsigned char 
   194 ;; Return value:  Size  Location     Type
   195 ;;		None               void
   196 ;; Registers used:
   197 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : 0/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   203 ;;      Params:         3       0       0       0       0       0       0       0       0
   204 ;;      Locals:         2       0       0       0       0       0       0       0       0
   205 ;;      Temps:          0       0       0       0       0       0       0       0       0
   206 ;;      Totals:         5       0       0       0       0       0       0       0       0
   207 ;;Total ram usage:        5 bytes
   208 ;; Hardware stack levels used:    1
   209 ;; Hardware stack levels required when called:    3
   210 ;; This function calls:
   211 ;;		_LCD_Command
   212 ;;		_LCD_String
   213 ;; This function is called by:
   214 ;;		_main
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218                           	psect	text1
   219  000848                     __ptext1:
   220                           	opt stack 0
   221  000848                     _LCD_String_xy:
   222                           	opt stack 27
   223                           
   224                           ;incstack = 0
   225                           ;LCD_String_xy@row stored from wreg
   226  000848  6E0D               	movwf	LCD_String_xy@row,c
   227                           
   228                           ;LCD 16x2.c: 86: char location=0;
   229  00084A  0E00               	movlw	0
   230  00084C  6E0E               	movwf	LCD_String_xy@location,c
   231                           
   232                           ;LCD 16x2.c: 87: if(row<=1)
   233  00084E  0E02               	movlw	2
   234  000850  600D               	cpfslt	LCD_String_xy@row,c
   235  000852  D008               	goto	l785
   236                           
   237                           ;LCD 16x2.c: 88: {
   238                           ;LCD 16x2.c: 89: location=(0x80) | ((pos) & 0x0f);
   239  000854  500A               	movf	LCD_String_xy@pos,w,c
   240  000856  0B0F               	andlw	15
   241  000858  0980               	iorlw	128
   242  00085A  6E0E               	movwf	LCD_String_xy@location,c
   243                           
   244                           ;LCD 16x2.c: 90: LCD_Command(location);
   245  00085C  500E               	movf	LCD_String_xy@location,w,c
   246  00085E  EC81  F004         	call	_LCD_Command
   247                           
   248                           ;LCD 16x2.c: 91: }
   249  000862  D008               	goto	l789
   250  000864                     l785:
   251                           
   252                           ;LCD 16x2.c: 92: else
   253                           ;LCD 16x2.c: 93: {
   254                           ;LCD 16x2.c: 94: location=(0xC0) | ((pos) & 0x0f);
   255  000864  500A               	movf	LCD_String_xy@pos,w,c
   256  000866  0B0F               	andlw	15
   257  000868  09C0               	iorlw	192
   258  00086A  6E0E               	movwf	LCD_String_xy@location,c
   259                           
   260                           ;LCD 16x2.c: 95: LCD_Command(location);
   261  00086C  500E               	movf	LCD_String_xy@location,w,c
   262  00086E  EC81  F004         	call	_LCD_Command
   263  000872  D000               	goto	l789
   264  000874                     l789:
   265                           
   266                           ;LCD 16x2.c: 96: }
   267                           ;LCD 16x2.c: 97: LCD_String(msg);
   268  000874  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
   269  000878  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   270  00087C  EC58  F004         	call	_LCD_String	;wreg free
   271  000880  0012               	return		;funcret
   272  000882                     __end_of_LCD_String_xy:
   273                           	opt stack 0
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           
   277 ;; *************** function _LCD_String *****************
   278 ;; Defined at:
   279 ;;		line 74 in file "LCD 16x2.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;  msg             2    7[COMRAM] PTR const unsigned char 
   282 ;;		 -> STR_1(7), 
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;		None               void
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   294 ;;      Params:         2       0       0       0       0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0       0       0       0       0
   297 ;;      Totals:         2       0       0       0       0       0       0       0       0
   298 ;;Total ram usage:        2 bytes
   299 ;; Hardware stack levels used:    1
   300 ;; Hardware stack levels required when called:    2
   301 ;; This function calls:
   302 ;;		_LCD_Char
   303 ;; This function is called by:
   304 ;;		_LCD_String_xy
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text2
   309  0008B0                     __ptext2:
   310                           	opt stack 0
   311  0008B0                     _LCD_String:
   312                           	opt stack 27
   313                           
   314                           ;LCD 16x2.c: 76: while((*msg)!=0)
   315                           
   316                           ;incstack = 0
   317  0008B0  D00B               	goto	l769
   318  0008B2                     l765:
   319                           
   320                           ;LCD 16x2.c: 77: {
   321                           ;LCD 16x2.c: 78: LCD_Char(*msg);
   322  0008B2  C008  FFF6         	movff	LCD_String@msg,tblptrl
   323  0008B6  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
   324  0008BA                     	if	0	;tblptru may be non-zero
   325  0008BA                     	endif
   326  0008BA                     	if	0	;tblptru may be non-zero
   327  0008BA                     	endif
   328  0008BA  0008               	tblrd		*
   329  0008BC  50F5               	movf	tablat,w,c
   330  0008BE  EC94  F004         	call	_LCD_Char
   331                           
   332                           ;LCD 16x2.c: 79: msg++;
   333  0008C2  4A08               	infsnz	LCD_String@msg,f,c
   334  0008C4  2A09               	incf	LCD_String@msg+1,f,c
   335  0008C6  D000               	goto	l769
   336  0008C8                     l769:
   337  0008C8  C008  FFF6         	movff	LCD_String@msg,tblptrl
   338  0008CC  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
   339  0008D0                     	if	0	;tblptru may be non-zero
   340  0008D0                     	endif
   341  0008D0                     	if	0	;tblptru may be non-zero
   342  0008D0                     	endif
   343  0008D0  0008               	tblrd		*
   344  0008D2  50F5               	movf	tablat,w,c
   345  0008D4  0900               	iorlw	0
   346  0008D6  A4D8               	btfss	status,2,c
   347  0008D8  D7EC               	goto	l765
   348  0008DA  0012               	return		;funcret
   349  0008DC                     __end_of_LCD_String:
   350                           	opt stack 0
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           status	equ	0xFD8
   356                           
   357 ;; *************** function _LCD_Char *****************
   358 ;; Defined at:
   359 ;;		line 64 in file "LCD 16x2.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;  dat             1    wreg     unsigned char 
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  dat             1    6[COMRAM] unsigned char 
   364 ;; Return value:  Size  Location     Type
   365 ;;		None               void
   366 ;; Registers used:
   367 ;;		wreg, status,2, status,0, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   373 ;;      Params:         0       0       0       0       0       0       0       0       0
   374 ;;      Locals:         1       0       0       0       0       0       0       0       0
   375 ;;      Temps:          0       0       0       0       0       0       0       0       0
   376 ;;      Totals:         1       0       0       0       0       0       0       0       0
   377 ;;Total ram usage:        1 bytes
   378 ;; Hardware stack levels used:    1
   379 ;; Hardware stack levels required when called:    1
   380 ;; This function calls:
   381 ;;		_MSdelay
   382 ;; This function is called by:
   383 ;;		_main
   384 ;;		_LCD_String
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	text3
   389  000928                     __ptext3:
   390                           	opt stack 0
   391  000928                     _LCD_Char:
   392                           	opt stack 27
   393                           
   394                           ;incstack = 0
   395                           ;LCD_Char@dat stored from wreg
   396  000928  6E07               	movwf	LCD_Char@dat,c
   397                           
   398                           ;LCD 16x2.c: 66: LATB= dat;
   399  00092A  C007  FF8A         	movff	LCD_Char@dat,3978	;volatile
   400                           
   401                           ;LCD 16x2.c: 67: LATD0 = 1;
   402  00092E  808C               	bsf	3980,0,c	;volatile
   403                           
   404                           ;LCD 16x2.c: 68: LATD1=1;
   405  000930  828C               	bsf	3980,1,c	;volatile
   406                           
   407                           ;LCD 16x2.c: 69: MSdelay(1);
   408  000932  0E00               	movlw	0
   409  000934  6E02               	movwf	MSdelay@val+1,c
   410  000936  0E01               	movlw	1
   411  000938  6E01               	movwf	MSdelay@val,c
   412  00093A  EC05  F004         	call	_MSdelay	;wreg free
   413                           
   414                           ;LCD 16x2.c: 70: LATD1=0;
   415  00093E  928C               	bcf	3980,1,c	;volatile
   416  000940  0012               	return		;funcret
   417  000942                     __end_of_LCD_Char:
   418                           	opt stack 0
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           status	equ	0xFD8
   424                           
   425 ;; *************** function _LCD_Init *****************
   426 ;; Defined at:
   427 ;;		line 36 in file "LCD 16x2.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;		None               void
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   441 ;;      Params:         0       0       0       0       0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0       0       0       0       0
   444 ;;      Totals:         0       0       0       0       0       0       0       0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; Hardware stack levels required when called:    2
   448 ;; This function calls:
   449 ;;		_LCD_Command
   450 ;;		_MSdelay
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text4
   457  000882                     __ptext4:
   458                           	opt stack 0
   459  000882                     _LCD_Init:
   460                           	opt stack 28
   461                           
   462                           ;LCD 16x2.c: 38: MSdelay(15);
   463                           
   464                           ;incstack = 0
   465  000882  0E00               	movlw	0
   466  000884  6E02               	movwf	MSdelay@val+1,c
   467  000886  0E0F               	movlw	15
   468  000888  6E01               	movwf	MSdelay@val,c
   469  00088A  EC05  F004         	call	_MSdelay	;wreg free
   470                           
   471                           ;LCD 16x2.c: 39: TRISB = 0x00;
   472  00088E  0E00               	movlw	0
   473  000890  6E93               	movwf	3987,c	;volatile
   474                           
   475                           ;LCD 16x2.c: 40: TRISD = 0x00;
   476  000892  0E00               	movlw	0
   477  000894  6E95               	movwf	3989,c	;volatile
   478                           
   479                           ;LCD 16x2.c: 41: LCD_Command(0x38);
   480  000896  0E38               	movlw	56
   481  000898  EC81  F004         	call	_LCD_Command
   482                           
   483                           ;LCD 16x2.c: 42: LCD_Command(0x01);
   484  00089C  0E01               	movlw	1
   485  00089E  EC81  F004         	call	_LCD_Command
   486                           
   487                           ;LCD 16x2.c: 43: LCD_Command(0x0c);
   488  0008A2  0E0C               	movlw	12
   489  0008A4  EC81  F004         	call	_LCD_Command
   490                           
   491                           ;LCD 16x2.c: 44: LCD_Command(0x06);
   492  0008A8  0E06               	movlw	6
   493  0008AA  EC81  F004         	call	_LCD_Command
   494  0008AE  0012               	return		;funcret
   495  0008B0                     __end_of_LCD_Init:
   496                           	opt stack 0
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           status	equ	0xFD8
   502                           
   503 ;; *************** function _LCD_Command *****************
   504 ;; Defined at:
   505 ;;		line 54 in file "LCD 16x2.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  cmd             1    wreg     unsigned char 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  cmd             1    6[COMRAM] unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;		None               void
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   519 ;;      Params:         0       0       0       0       0       0       0       0       0
   520 ;;      Locals:         1       0       0       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0
   522 ;;      Totals:         1       0       0       0       0       0       0       0       0
   523 ;;Total ram usage:        1 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    1
   526 ;; This function calls:
   527 ;;		_MSdelay
   528 ;; This function is called by:
   529 ;;		_LCD_Init
   530 ;;		_LCD_String_xy
   531 ;;		_LCD_Clear
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text5
   536  000902                     __ptext5:
   537                           	opt stack 0
   538  000902                     _LCD_Command:
   539                           	opt stack 28
   540                           
   541                           ;incstack = 0
   542                           ;LCD_Command@cmd stored from wreg
   543  000902  6E07               	movwf	LCD_Command@cmd,c
   544                           
   545                           ;LCD 16x2.c: 56: LATB= cmd;
   546  000904  C007  FF8A         	movff	LCD_Command@cmd,3978	;volatile
   547                           
   548                           ;LCD 16x2.c: 57: LATD0 = 0;
   549  000908  908C               	bcf	3980,0,c	;volatile
   550                           
   551                           ;LCD 16x2.c: 58: LATD1 = 1;
   552  00090A  828C               	bsf	3980,1,c	;volatile
   553                           
   554                           ;LCD 16x2.c: 59: MSdelay(1);
   555  00090C  0E00               	movlw	0
   556  00090E  6E02               	movwf	MSdelay@val+1,c
   557  000910  0E01               	movlw	1
   558  000912  6E01               	movwf	MSdelay@val,c
   559  000914  EC05  F004         	call	_MSdelay	;wreg free
   560                           
   561                           ;LCD 16x2.c: 60: LATD1 = 0;
   562  000918  928C               	bcf	3980,1,c	;volatile
   563                           
   564                           ;LCD 16x2.c: 61: MSdelay(3);
   565  00091A  0E00               	movlw	0
   566  00091C  6E02               	movwf	MSdelay@val+1,c
   567  00091E  0E03               	movlw	3
   568  000920  6E01               	movwf	MSdelay@val,c
   569  000922  EC05  F004         	call	_MSdelay	;wreg free
   570  000926  0012               	return		;funcret
   571  000928                     __end_of_LCD_Command:
   572                           	opt stack 0
   573                           tblptru	equ	0xFF8
   574                           tblptrh	equ	0xFF7
   575                           tblptrl	equ	0xFF6
   576                           tablat	equ	0xFF5
   577                           status	equ	0xFD8
   578                           
   579 ;; *************** function _MSdelay *****************
   580 ;; Defined at:
   581 ;;		line 101 in file "LCD 16x2.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  val             2    0[COMRAM] unsigned int 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  j               2    4[COMRAM] unsigned int 
   586 ;;  i               2    2[COMRAM] unsigned int 
   587 ;; Return value:  Size  Location     Type
   588 ;;		None               void
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         2       0       0       0       0       0       0       0       0
   597 ;;      Locals:         4       0       0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0
   599 ;;      Totals:         6       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        6 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_LCD_Init
   606 ;;		_LCD_Command
   607 ;;		_LCD_Char
   608 ;;		_LCD_Clear
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text6
   613  00080A                     __ptext6:
   614                           	opt stack 0
   615  00080A                     _MSdelay:
   616                           	opt stack 27
   617                           
   618                           ;LCD 16x2.c: 103: unsigned int i,j;
   619                           ;LCD 16x2.c: 104: for(i=0;i<=val;i++)
   620                           
   621                           ;incstack = 0
   622  00080A  0E00               	movlw	0
   623  00080C  6E04               	movwf	MSdelay@i+1,c
   624  00080E  0E00               	movlw	0
   625  000810  6E03               	movwf	MSdelay@i,c
   626  000812  D013               	goto	l739
   627  000814                     l727:
   628                           
   629                           ;LCD 16x2.c: 105: for(j=0;j<81;j++);
   630  000814  0E00               	movlw	0
   631  000816  6E06               	movwf	MSdelay@j+1,c
   632  000818  0E00               	movlw	0
   633  00081A  6E05               	movwf	MSdelay@j,c
   634  00081C                     l729:
   635  00081C  5006               	movf	MSdelay@j+1,w,c
   636  00081E  E10A               	bnz	l737
   637  000820  0E51               	movlw	81
   638  000822  5C05               	subwf	MSdelay@j,w,c
   639  000824  B0D8               	btfsc	status,0,c
   640  000826  D006               	goto	l737
   641  000828  D001               	goto	l733
   642  00082A  D004               	goto	l737
   643  00082C                     l733:
   644  00082C  4A05               	infsnz	MSdelay@j,f,c
   645  00082E  2A06               	incf	MSdelay@j+1,f,c
   646  000830  D7F5               	goto	l729
   647  000832  D000               	goto	l737
   648  000834                     l737:
   649  000834  4A03               	infsnz	MSdelay@i,f,c
   650  000836  2A04               	incf	MSdelay@i+1,f,c
   651  000838  D000               	goto	l739
   652  00083A                     l739:
   653  00083A  5003               	movf	MSdelay@i,w,c
   654  00083C  5C01               	subwf	MSdelay@val,w,c
   655  00083E  5004               	movf	MSdelay@i+1,w,c
   656  000840  5802               	subwfb	MSdelay@val+1,w,c
   657  000842  B0D8               	btfsc	status,0,c
   658  000844  D7E7               	goto	l727
   659  000846  0012               	return		;funcret
   660  000848                     __end_of_MSdelay:
   661                           	opt stack 0
   662                           tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           status	equ	0xFD8
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           status	equ	0xFD8
   672                           
   673                           	psect	rparam
   674  0000                     tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2212
                           _LCD_Char
                           _LCD_Init
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    1097
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     477
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     379
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     736
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     379
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     357
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      E       E       1       14.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jul 08 13:11:30 2016

           ?_LCD_Command 0001                       l26 08FC              __CFG_BOR$ON 000000  
            __CFG_BORV$3 000000              ?_LCD_String 0008             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l733 082C                      l727 0814                      l737 0834  
                    l729 081C                      l739 083A                      l765 08B2  
                    l769 08C8                      l785 0864                      l789 0874  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_LVP$OFF 000000  
            LCD_Char@dat 0007             __CFG_WDT$OFF 000000                     STR_1 0801  
                   _LATB 000F8A                     _main 08DC                     start 0000  
        __end_of_MSdelay 0848            __CFG_IESO$OFF 000000            _LCD_String_xy 0848  
           ___param_bank 000010         __end_of_LCD_Char 0942         __end_of_LCD_Init 08B0  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  _LATD0 007C60                    _LATD1 007C61            __CFG_USBDIV$1 000000  
                  _TRISB 000F93                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    tablat 000FF5                    status 000FD8  
    __size_of_LCD_String 002C           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
         ?_LCD_String_xy 000A           __CFG_MCLRE$OFF 000000          __initialization 0942  
           __end_of_main 0902                   ??_main 000F            __activetblptr 000001  
       LCD_String_xy@msg 000B         LCD_String_xy@pos 000A         LCD_String_xy@row 000D  
              ??_MSdelay 0003                   _OSCCON 000FD3           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000     __size_of_LCD_Command 0026             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 0942  
              ?_LCD_Init 0001          ??_LCD_String_xy 000D            ___rparam_used 000001  
         __pcstackCOMRAM 0001             ??_LCD_String 000A               ??_LCD_Char 0007  
             ??_LCD_Init 0008       __end_of_LCD_String 08DC                  _MSdelay 080A  
        __CFG_VREGEN$OFF 000000            LCD_String@msg 0008                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 0942  
                __ramtop 0800                  __ptext0 08DC                  __ptext1 0848  
                __ptext2 08B0                  __ptext3 0928                  __ptext4 0882  
                __ptext5 0902                  __ptext6 080A     end_of_initialization 0942  
         LCD_Command@cmd 0007        __size_of_LCD_Char 001A        __size_of_LCD_Init 002E  
          ??_LCD_Command 0007      start_initialization 0942    __end_of_LCD_String_xy 0882  
       __CFG_LPT1OSC$OFF 000000      __end_of_LCD_Command 0928                 ?_MSdelay 0001  
            __smallconst 0800    LCD_String_xy@location 000E                 MSdelay@i 0003  
               MSdelay@j 0005                 _LCD_Char 0928                 _LCD_Init 0882  
       __CFG_WDTPS$32768 000000              _LCD_Command 0902         __size_of_MSdelay 003E  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
          __size_of_main 0026               MSdelay@val 0001               _LCD_String 08B0  
  __CFG_CPUDIV$OSC1_PLL2 000000      __CFG_FOSC$INTOSC_EC 000000   __size_of_LCD_String_xy 003A  
